from dimerizer.alparser import atomlist_backparser as backparser

def write(sigmas,natoms,atomlist,outdir, allatoms=False, q = 0.5, temp = 300, atoffset=0):
   """
   A collection plumed template for the two basic ways of running a Dimer simulation.
   
   Check the Plumed documentation for more info about the Dimer Collective Variable.
   """
   if allatoms:
      satoms="ALLATOMS"
      grps=""
   else:
      lst=range(1+atoffset,natoms+atoffset+1)
      
      atlist2= range(natoms, natoms+len(atomlist))
      
      d1b1=backparser(atomlist)
      d1b2=backparser(atlist2)
      wholemolrange="1-"+str(natoms+2*len(atomlist))
      grps="""
GROUP ATOMS=%s LABEL=d1b1
GROUP ATOMS=%s LABEL=d1b2
WHOLEMOLECULES ENTITY0=%s
      """ % (d1b1,d1b2,wholemolrange)
      satoms="ATOMS1=d1b1 ATOMS2=d1b2"
      
   
   for i,s in enumerate(sigmas):
      fn=outdir+"plumed."+str(i)+".dat"
      fh = open(fn,"w+")
      sg="DSIGMA="+str(s)
      plin="""
####### File generated by DIMERIZER #########
#######This is the replica index %d ######### 
##Basic configuration for a Gromacs Dimer 
##simulation with virtual sites.
##To be used with modified forcefields 
##that should have been generated along with this file.
##Edit with what you need.
#############################################

%s

dim: DIMER Q=%.2f TEMP=%.2f %s %s

RESTRAINT ARG=dim AT=0 KAPPA=0 SLOPE=1 LABEL=dimforces



PRINT ...
ARG=dim
STRIDE=10
FILE=colvar.string
... PRINT 

      """ % (i,grps,q,temp,sg,satoms)
      
      fh.write(plin)
      fh.close()
      
	 

